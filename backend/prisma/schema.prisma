// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  role      Role     @default(USER)
  cart      Cart[]
  wishlist  Wishlist[]
  createdAt DateTime @default(now())
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  price       Float
  stock       Int
  category    String
  image       String?
  isActive    Boolean  @default(true) // Para "eliminación lógica"
  cartItems   Cart[]
  wishlist    Wishlist[]
  createdAt   DateTime @default(now())
}

model Cart {
  id        Int     @id @default(autoincrement())
  user      User    @relation(fields: [userId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
  userId    Int
  productId Int
  quantity  Int     @default(1)
  createdAt DateTime @default(now())

  @@unique([userId, productId]) // para evitar duplicados en el carrito
}

model Wishlist {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
  userId    Int
  productId Int
  createdAt DateTime @default(now())

  @@unique([userId, productId]) // para evitar duplicados en la wishlist
}